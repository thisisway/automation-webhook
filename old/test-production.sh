#!/bin/bash

echo "=== Teste de Produ√ß√£o - Automation Webhook ==="
echo "Testando cria√ß√£o de diret√≥rios e containers sem sudo..."
echo ""

# Fun√ß√£o para testar cria√ß√£o de diret√≥rio
test_directory_creation() {
    local dir="$1"
    local description="$2"
    
    echo "üìÅ Testando cria√ß√£o de diret√≥rio: $description"
    echo "   Caminho: $dir"
    
    # Remover diret√≥rio se existir (para teste limpo)
    if [ -d "$dir" ]; then
        echo "   ‚ö†Ô∏è  Diret√≥rio j√° existe, removendo para teste..."
        rm -rf "$dir" 2>/dev/null || echo "   ‚ö†Ô∏è  N√£o foi poss√≠vel remover (sem permiss√£o)"
    fi
    
    # Tentar criar com umask permissivo
    umask 000
    if mkdir -p "$dir" 2>/dev/null; then
        echo "   ‚úÖ Diret√≥rio criado com sucesso"
        
        # Testar escrita
        if echo "test" > "$dir/test.txt" 2>/dev/null; then
            echo "   ‚úÖ Escrita no diret√≥rio funcionando"
            rm -f "$dir/test.txt" 2>/dev/null
        else
            echo "   ‚ùå N√£o √© poss√≠vel escrever no diret√≥rio"
        fi
    else
        echo "   ‚ùå Falha ao criar diret√≥rio (sem permiss√£o)"
    fi
    umask 022
    echo ""
}

# Fun√ß√£o para testar acesso ao Docker
test_docker_access() {
    echo "üê≥ Testando acesso ao Docker..."
    
    if docker version >/dev/null 2>&1; then
        echo "   ‚úÖ Docker acess√≠vel"
        
        # Testar cria√ß√£o de container
        if docker run --rm hello-world >/dev/null 2>&1; then
            echo "   ‚úÖ Cria√ß√£o de container funcionando"
        else
            echo "   ‚ùå Falha ao criar container"
        fi
    else
        echo "   ‚ùå Docker n√£o acess√≠vel"
    fi
    echo ""
}

# Fun√ß√£o para testar API
test_api() {
    echo "üåê Testando API..."
    
    # Testar endpoint de diagn√≥stico
    if curl -s http://localhost/api/docker-diagnostic >/dev/null 2>&1; then
        echo "   ‚úÖ API respondendo"
        echo "   üìä Diagn√≥stico Docker:"
        curl -s http://localhost/api/docker-diagnostic | head -20
    else
        echo "   ‚ùå API n√£o respondendo"
    fi
    echo ""
}

# Executar testes
echo "Usu√°rio atual: $(whoami)"
echo "UID: $(id -u)"
echo "GID: $(id -g)"
echo "Grupos: $(groups)"
echo ""

# Testar diret√≥rios
test_directory_creation "/var/www/html/volumes/test" "volumes local"
test_directory_creation "/etc/automation-webhook/volumes/test" "volumes externos"

# Testar Docker
test_docker_access

# Testar API
test_api

echo "=== Teste Conclu√≠do ==="
