#!/bin/bash

# Script para testar e configurar acesso ao Docker
# Uso: ./test-docker-access.sh

YELLOW='\033[1;33m'
GREEN='\033[0;32m'
RED='\033[0;31m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${YELLOW}üê≥ Teste de Acesso ao Docker${NC}"
echo "=================================="

# Verificar se o Docker est√° instalado
if ! command -v docker > /dev/null 2>&1; then
    echo -e "${RED}‚ùå Docker n√£o est√° instalado${NC}"
    exit 1
fi

echo -e "${GREEN}‚úÖ Docker est√° instalado${NC}"

# Verificar vers√£o do Docker
DOCKER_VERSION=$(docker --version 2>/dev/null)
echo -e "${BLUE}‚ÑπÔ∏è  Vers√£o: $DOCKER_VERSION${NC}"

# Verificar se o daemon est√° rodando
echo ""
echo -e "${BLUE}üîç Verificando daemon Docker...${NC}"
if docker version > /dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ Daemon Docker est√° rodando${NC}"
else
    echo -e "${RED}‚ùå Daemon Docker n√£o est√° acess√≠vel${NC}"
    echo "Poss√≠veis causas:"
    echo "  - Daemon n√£o est√° rodando"
    echo "  - Usu√°rio n√£o tem permiss√£o"
    echo "  - Socket n√£o est√° configurado corretamente"
fi

# Verificar usu√°rio atual
CURRENT_USER=$(whoami)
CURRENT_UID=$(id -u)
CURRENT_GID=$(id -g)

echo ""
echo -e "${BLUE}üë§ Usu√°rio atual: $CURRENT_USER (UID: $CURRENT_UID, GID: $CURRENT_GID)${NC}"

# Verificar grupos do usu√°rio
USER_GROUPS=$(groups)
echo -e "${BLUE}üë• Grupos: $USER_GROUPS${NC}"

# Verificar se est√° no grupo docker
if groups | grep -q '\bdocker\b'; then
    echo -e "${GREEN}‚úÖ Usu√°rio est√° no grupo docker${NC}"
else
    echo -e "${RED}‚ùå Usu√°rio N√ÉO est√° no grupo docker${NC}"
fi

# Verificar socket do Docker
echo ""
echo -e "${BLUE}üîå Verificando socket Docker...${NC}"
if [ -S "/var/run/docker.sock" ]; then
    SOCKET_INFO=$(ls -la /var/run/docker.sock)
    echo -e "${GREEN}‚úÖ Socket encontrado: $SOCKET_INFO${NC}"
    
    # Verificar permiss√µes do socket
    if [ -r "/var/run/docker.sock" ] && [ -w "/var/run/docker.sock" ]; then
        echo -e "${GREEN}‚úÖ Socket √© leg√≠vel e grav√°vel${NC}"
    else
        echo -e "${RED}‚ùå Socket n√£o tem permiss√µes adequadas${NC}"
    fi
else
    echo -e "${RED}‚ùå Socket Docker n√£o encontrado${NC}"
fi

# Teste pr√°tico de comando Docker
echo ""
echo -e "${BLUE}üß™ Testando comando Docker...${NC}"
if docker ps > /dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ Comando 'docker ps' funcionou${NC}"
    
    # Contar containers
    CONTAINER_COUNT=$(docker ps -q | wc -l)
    echo -e "${BLUE}‚ÑπÔ∏è  Containers rodando: $CONTAINER_COUNT${NC}"
    
    # Teste de cria√ß√£o de container
    echo ""
    echo -e "${BLUE}üß™ Testando cria√ß√£o de container...${NC}"
    if docker run --rm hello-world > /dev/null 2>&1; then
        echo -e "${GREEN}‚úÖ Pode criar containers${NC}"
    else
        echo -e "${RED}‚ùå N√ÉO pode criar containers${NC}"
    fi
else
    echo -e "${RED}‚ùå Comando 'docker ps' falhou${NC}"
    
    # Tentar com sudo
    echo -e "${BLUE}üîÑ Tentando com sudo...${NC}"
    if sudo docker ps > /dev/null 2>&1; then
        echo -e "${YELLOW}‚ö†Ô∏è  Funciona com sudo, mas n√£o sem sudo${NC}"
        echo "Solu√ß√£o: Adicionar usu√°rio ao grupo docker"
    else
        echo -e "${RED}‚ùå Nem com sudo funciona${NC}"
    fi
fi

# Verificar se √© ambiente Docker-in-Docker
echo ""
echo -e "${BLUE}üê≥ Verificando ambiente...${NC}"
if [ -f /.dockerenv ]; then
    echo -e "${YELLOW}‚ÑπÔ∏è  Executando dentro de um container Docker${NC}"
else
    echo -e "${BLUE}‚ÑπÔ∏è  Executando no host${NC}"
fi

# Sugest√µes de corre√ß√£o
echo ""
echo -e "${YELLOW}üí° Sugest√µes de Corre√ß√£o:${NC}"

if ! groups | grep -q '\bdocker\b'; then
    echo "1. Adicionar usu√°rio ao grupo docker:"
    echo "   sudo usermod -aG docker $CURRENT_USER"
    echo ""
fi

if [ -S "/var/run/docker.sock" ]; then
    echo "2. Corrigir permiss√µes do socket:"
    echo "   sudo chown root:docker /var/run/docker.sock"
    echo "   sudo chmod 660 /var/run/docker.sock"
    echo ""
fi

echo "3. Reiniciar servi√ßo/sess√£o ap√≥s mudan√ßas nos grupos"
echo "4. Em containers: usar 'privileged: true' no docker-compose.yml"
echo "5. Montar socket com permiss√µes de escrita: '/var/run/docker.sock:/var/run/docker.sock:rw'"

echo ""
echo -e "${BLUE}üìã Para testar via API:${NC}"
echo "curl http://localhost/api/docker-diagnostic"
